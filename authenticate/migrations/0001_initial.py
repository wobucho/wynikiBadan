# Generated by Django 3.2.11 on 2022-01-26 20:13

import authenticate.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('type', models.CharField(choices=[('LEKARZ', 'lekarz'), ('PACJENT', 'pacjent'), ('DIAGNOSTA', 'diagnosta'), ('ADMIN', 'admin')], default='PACJENT', max_length=40, verbose_name='Type')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', authenticate.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Diagnosta',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('authenticate.user',),
            managers=[
                ('objects', authenticate.models.DiagnostaManager()),
            ],
        ),
        migrations.CreateModel(
            name='Lekarz',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('authenticate.user',),
            managers=[
                ('objects', authenticate.models.LekarzManager()),
            ],
        ),
        migrations.CreateModel(
            name='Pacjent',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('authenticate.user',),
            managers=[
                ('objects', authenticate.models.PacjentManager()),
            ],
        ),
        migrations.CreateModel(
            name='DiagnostaProfil',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profilD', serialize=False, to='authenticate.lekarz')),
                ('imie', models.CharField(max_length=30)),
                ('nazwisko', models.CharField(max_length=60)),
                ('telefon', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
            ],
        ),
        migrations.CreateModel(
            name='PacjentProfil',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profilP', serialize=False, to='authenticate.pacjent')),
                ('pesel', models.CharField(max_length=11, unique=True)),
                ('imie', models.CharField(max_length=30)),
                ('nazwisko', models.CharField(max_length=60)),
                ('telefon', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
            ],
        ),
        migrations.CreateModel(
            name='LekarzProfil',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profilL', serialize=False, to='authenticate.lekarz')),
                ('pwz', models.CharField(max_length=7, unique=True)),
                ('imie', models.CharField(max_length=30)),
                ('nazwisko', models.CharField(max_length=60)),
                ('telefon', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('pacjenci', models.ManyToManyField(blank=True, to='authenticate.PacjentProfil')),
            ],
        ),
    ]
